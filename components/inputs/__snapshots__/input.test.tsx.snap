// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "margin": 10,
      "marginTop": 5,
      "padding": 10,
      "paddingTop": 30,
    }
  }
>
  <TextInput
    accessibilityHint="input"
    accessibilityLabel="answer input"
    allowFontScaling={true}
    keyboardType="default"
    moveToNextField={
      [MockFunction] {
        "calls": Array [
          Array [
            Component {
              "_reactInternalInstance": Object {},
              "_reactInternals": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 7,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                  ],
                  "_debugID": 3,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 4,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 5,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 6,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "RCTSafeAreaView",
                        "firstEffect": [Circular],
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <TextInput
                            accessibilityHint="input"
                            accessibilityLabel="answer input"
                            allowFontScaling={true}
                            keyboardType="default"
                            moveToNextField={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            name="firstName"
                            onBlur={[Function]}
                            onChangeText={[Function]}
                            onFocus={[Function]}
                            onSubmitEditing={[Function]}
                            placeholder="First name"
                            placeholderTextColor="grey"
                            refName="lastName"
                            rejectResponderTermination={true}
                            returnKeyType="done"
                            setValue={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            style={
                              Object {
                                "backgroundColor": "rgba(126,94,129,0.25)",
                                "borderColor": "rgba(126,94,129,0.1)",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "color": "white",
                                "padding": 18,
                              }
                            }
                            underlineColorAndroid="transparent"
                            value="firstName"
                          />,
                          "emulateUnlessSupported": true,
                          "style": Object {
                            "margin": 10,
                            "marginTop": 5,
                            "padding": 10,
                            "paddingTop": 30,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <TextInput
                            accessibilityHint="input"
                            accessibilityLabel="answer input"
                            allowFontScaling={true}
                            keyboardType="default"
                            moveToNextField={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            name="firstName"
                            onBlur={[Function]}
                            onChangeText={[Function]}
                            onFocus={[Function]}
                            onSubmitEditing={[Function]}
                            placeholder="First name"
                            placeholderTextColor="grey"
                            refName="lastName"
                            rejectResponderTermination={true}
                            returnKeyType="done"
                            setValue={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            style={
                              Object {
                                "backgroundColor": "rgba(126,94,129,0.25)",
                                "borderColor": "rgba(126,94,129,0.1)",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "color": "white",
                                "padding": 18,
                              }
                            }
                            underlineColorAndroid="transparent"
                            value="firstName"
                          />,
                          "emulateUnlessSupported": true,
                          "style": Object {
                            "margin": 10,
                            "marginTop": 5,
                            "padding": 10,
                            "paddingTop": 30,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "children": Array [
                            Object {
                              "children": Array [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 8,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "accessibilityHint": "input",
                                  "accessibilityLabel": "answer input",
                                  "allowFontScaling": true,
                                  "children": undefined,
                                  "keyboardType": "default",
                                  "moveToNextField": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "name": "firstName",
                                  "onBlur": [Function],
                                  "onChangeText": [Function],
                                  "onFocus": [Function],
                                  "onSubmitEditing": [Function],
                                  "placeholder": "First name",
                                  "placeholderTextColor": "grey",
                                  "refName": "lastName",
                                  "rejectResponderTermination": true,
                                  "returnKeyType": "done",
                                  "setValue": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "style": Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  },
                                  "underlineColorAndroid": "transparent",
                                  "value": "firstName",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "accessibilityHint": "input",
                                  "accessibilityLabel": "answer input",
                                  "allowFontScaling": true,
                                  "children": undefined,
                                  "keyboardType": "default",
                                  "moveToNextField": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "name": "firstName",
                                  "onBlur": [Function],
                                  "onChangeText": [Function],
                                  "onFocus": [Function],
                                  "onSubmitEditing": [Function],
                                  "placeholder": "First name",
                                  "placeholderTextColor": "grey",
                                  "refName": "lastName",
                                  "rejectResponderTermination": true,
                                  "returnKeyType": "done",
                                  "setValue": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "style": Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  },
                                  "underlineColorAndroid": "transparent",
                                  "value": "firstName",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": Object {
                                "accessibilityHint": "input",
                                "accessibilityLabel": "answer input",
                                "allowFontScaling": true,
                                "children": undefined,
                                "keyboardType": "default",
                                "moveToNextField": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "name": "firstName",
                                "onBlur": [Function],
                                "onChangeText": [Function],
                                "onFocus": [Function],
                                "onSubmitEditing": [Function],
                                "placeholder": "First name",
                                "placeholderTextColor": "grey",
                                "refName": "lastName",
                                "rejectResponderTermination": true,
                                "returnKeyType": "done",
                                "setValue": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "style": Object {
                                  "backgroundColor": "rgba(126,94,129,0.25)",
                                  "borderColor": "rgba(126,94,129,0.1)",
                                  "borderRadius": 8,
                                  "borderStyle": "solid",
                                  "borderWidth": 1,
                                  "color": "white",
                                  "padding": 18,
                                },
                                "underlineColorAndroid": "transparent",
                                "value": "firstName",
                              },
                              "rootContainerInstance": Object {
                                "children": Array [
                                  [Circular],
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "tag": "INSTANCE",
                              "type": "TextInput",
                            },
                          ],
                          "internalInstanceHandle": [Circular],
                          "isHidden": false,
                          "props": Object {
                            "children": <TextInput
                              accessibilityHint="input"
                              accessibilityLabel="answer input"
                              allowFontScaling={true}
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              onBlur={[Function]}
                              onChangeText={[Function]}
                              onFocus={[Function]}
                              onSubmitEditing={[Function]}
                              placeholder="First name"
                              placeholderTextColor="grey"
                              refName="lastName"
                              rejectResponderTermination={true}
                              returnKeyType="done"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              style={
                                Object {
                                  "backgroundColor": "rgba(126,94,129,0.25)",
                                  "borderColor": "rgba(126,94,129,0.1)",
                                  "borderRadius": 8,
                                  "borderStyle": "solid",
                                  "borderWidth": 1,
                                  "color": "white",
                                  "padding": 18,
                                }
                              }
                              underlineColorAndroid="transparent"
                              value="firstName"
                            />,
                            "emulateUnlessSupported": true,
                            "style": Object {
                              "margin": 10,
                              "marginTop": 5,
                              "padding": 10,
                              "paddingTop": 30,
                            },
                          },
                          "rootContainerInstance": Object {
                            "children": Array [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "RCTSafeAreaView",
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "RCTSafeAreaView",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": [Function],
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "emulateUnlessSupported": true,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "emulateUnlessSupported": true,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Component {
                        "_reactInternalInstance": Object {},
                        "_reactInternals": [Circular],
                        "blur": [MockFunction],
                        "context": Object {},
                        "focus": [MockFunction],
                        "measure": [MockFunction],
                        "measureInWindow": [MockFunction],
                        "measureLayout": [MockFunction],
                        "props": Object {
                          "children": <TextInput
                            accessibilityHint="input"
                            accessibilityLabel="answer input"
                            allowFontScaling={true}
                            keyboardType="default"
                            moveToNextField={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            name="firstName"
                            onBlur={[Function]}
                            onChangeText={[Function]}
                            onFocus={[Function]}
                            onSubmitEditing={[Function]}
                            placeholder="First name"
                            placeholderTextColor="grey"
                            refName="lastName"
                            rejectResponderTermination={true}
                            returnKeyType="done"
                            setValue={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            style={
                              Object {
                                "backgroundColor": "rgba(126,94,129,0.25)",
                                "borderColor": "rgba(126,94,129,0.1)",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "color": "white",
                                "padding": 18,
                              }
                            }
                            underlineColorAndroid="transparent"
                            value="firstName"
                          />,
                          "emulateUnlessSupported": true,
                          "style": Object {
                            "margin": 10,
                            "marginTop": 5,
                            "padding": 10,
                            "paddingTop": 30,
                          },
                        },
                        "refs": Object {},
                        "setNativeProps": [MockFunction],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": null,
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "firstEffect": [Circular],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 11,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "firstEffect": [Circular],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "keyboardType": "default",
                    "moveToNextField": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "name": "firstName",
                    "placeholder": "First name",
                    "refName": "lastName",
                    "setValue": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "value": "firstName",
                  },
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": false,
                    "memoizedState": false,
                    "next": null,
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": false,
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "keyboardType": "default",
                    "moveToNextField": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "name": "firstName",
                    "placeholder": "First name",
                    "refName": "lastName",
                    "setValue": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "value": "firstName",
                  },
                  "ref": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 1,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 1,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": null,
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 1,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "createLegacyRoot()",
                        "callbackNode": null,
                        "callbackPriority": 15,
                        "containerInfo": Object {
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "children": Array [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 8,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "accessibilityHint": "input",
                                      "accessibilityLabel": "answer input",
                                      "allowFontScaling": true,
                                      "children": undefined,
                                      "keyboardType": "default",
                                      "moveToNextField": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "name": "firstName",
                                      "onBlur": [Function],
                                      "onChangeText": [Function],
                                      "onFocus": [Function],
                                      "onSubmitEditing": [Function],
                                      "placeholder": "First name",
                                      "placeholderTextColor": "grey",
                                      "refName": "lastName",
                                      "rejectResponderTermination": true,
                                      "returnKeyType": "done",
                                      "setValue": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "style": Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      },
                                      "underlineColorAndroid": "transparent",
                                      "value": "firstName",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "accessibilityHint": "input",
                                      "accessibilityLabel": "answer input",
                                      "allowFontScaling": true,
                                      "children": undefined,
                                      "keyboardType": "default",
                                      "moveToNextField": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "name": "firstName",
                                      "onBlur": [Function],
                                      "onChangeText": [Function],
                                      "onFocus": [Function],
                                      "onSubmitEditing": [Function],
                                      "placeholder": "First name",
                                      "placeholderTextColor": "grey",
                                      "refName": "lastName",
                                      "rejectResponderTermination": true,
                                      "returnKeyType": "done",
                                      "setValue": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "style": Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      },
                                      "underlineColorAndroid": "transparent",
                                      "value": "firstName",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": Object {
                                    "accessibilityHint": "input",
                                    "accessibilityLabel": "answer input",
                                    "allowFontScaling": true,
                                    "children": undefined,
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "onBlur": [Function],
                                    "onChangeText": [Function],
                                    "onFocus": [Function],
                                    "onSubmitEditing": [Function],
                                    "placeholder": "First name",
                                    "placeholderTextColor": "grey",
                                    "refName": "lastName",
                                    "rejectResponderTermination": true,
                                    "returnKeyType": "done",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "style": Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    },
                                    "underlineColorAndroid": "transparent",
                                    "value": "firstName",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 6,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 5,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 4,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "firstEffect": [Circular],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 11,
                                    "treeBaseDuration": 0,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "updateQueue": null,
                                  },
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 4,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "firstEffect": [Circular],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 11,
                                    "treeBaseDuration": 0,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "updateQueue": null,
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": Object {},
                                    "_reactInternals": [Circular],
                                    "blur": [MockFunction],
                                    "context": Object {},
                                    "focus": [MockFunction],
                                    "measure": [MockFunction],
                                    "measureInWindow": [MockFunction],
                                    "measureLayout": [MockFunction],
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "refs": Object {},
                                    "setNativeProps": [MockFunction],
                                    "state": null,
                                    "updater": Object {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": Object {
                                      "pending": null,
                                    },
                                  },
                                },
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "RCTSafeAreaView",
                                "firstEffect": [Circular],
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 5,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 4,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "firstEffect": [Circular],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 11,
                                    "treeBaseDuration": 0,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "updateQueue": null,
                                  },
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 4,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "firstEffect": [Circular],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 11,
                                    "treeBaseDuration": 0,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "updateQueue": null,
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": Object {},
                                    "_reactInternals": [Circular],
                                    "blur": [MockFunction],
                                    "context": Object {},
                                    "focus": [MockFunction],
                                    "measure": [MockFunction],
                                    "measureInWindow": [MockFunction],
                                    "measureLayout": [MockFunction],
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "refs": Object {},
                                    "setNativeProps": [MockFunction],
                                    "state": null,
                                    "updater": Object {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": Object {
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "RCTSafeAreaView",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "RCTSafeAreaView",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": Object {},
                        "current": [Circular],
                        "entangledLanes": 0,
                        "entanglements": Array [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": Array [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": Array [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "hydrate": false,
                        "interactionThreadID": 1,
                        "memoizedInteractions": Set {},
                        "mutableReadLanes": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "effects": null,
                        "firstBaseUpdate": Object {
                          "callback": null,
                          "eventTime": 2136.425926,
                          "lane": 1,
                          "next": null,
                          "payload": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "tag": 0,
                        },
                        "lastBaseUpdate": Object {
                          "callback": null,
                          "eventTime": 2136.425926,
                          "lane": 1,
                          "next": null,
                          "payload": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "tag": 0,
                        },
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": null,
                    "firstEffect": [Circular],
                    "flags": 256,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <ForwardRef
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        placeholder="First name"
                        refName="lastName"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        value="firstName"
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "createLegacyRoot()",
                      "callbackNode": null,
                      "callbackPriority": 15,
                      "containerInfo": Object {
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "children": Array [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 8,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "accessibilityHint": "input",
                                    "accessibilityLabel": "answer input",
                                    "allowFontScaling": true,
                                    "children": undefined,
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "onBlur": [Function],
                                    "onChangeText": [Function],
                                    "onFocus": [Function],
                                    "onSubmitEditing": [Function],
                                    "placeholder": "First name",
                                    "placeholderTextColor": "grey",
                                    "refName": "lastName",
                                    "rejectResponderTermination": true,
                                    "returnKeyType": "done",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "style": Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    },
                                    "underlineColorAndroid": "transparent",
                                    "value": "firstName",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "accessibilityHint": "input",
                                    "accessibilityLabel": "answer input",
                                    "allowFontScaling": true,
                                    "children": undefined,
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "onBlur": [Function],
                                    "onChangeText": [Function],
                                    "onFocus": [Function],
                                    "onSubmitEditing": [Function],
                                    "placeholder": "First name",
                                    "placeholderTextColor": "grey",
                                    "refName": "lastName",
                                    "rejectResponderTermination": true,
                                    "returnKeyType": "done",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "style": Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    },
                                    "underlineColorAndroid": "transparent",
                                    "value": "firstName",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": Object {
                                  "accessibilityHint": "input",
                                  "accessibilityLabel": "answer input",
                                  "allowFontScaling": true,
                                  "children": undefined,
                                  "keyboardType": "default",
                                  "moveToNextField": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "name": "firstName",
                                  "onBlur": [Function],
                                  "onChangeText": [Function],
                                  "onFocus": [Function],
                                  "onSubmitEditing": [Function],
                                  "placeholder": "First name",
                                  "placeholderTextColor": "grey",
                                  "refName": "lastName",
                                  "rejectResponderTermination": true,
                                  "returnKeyType": "done",
                                  "setValue": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "style": Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  },
                                  "underlineColorAndroid": "transparent",
                                  "value": "firstName",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                            ],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 6,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 5,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 4,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": [Function],
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 4,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": Object {},
                                  "_reactInternals": [Circular],
                                  "blur": [MockFunction],
                                  "context": Object {},
                                  "focus": [MockFunction],
                                  "measure": [MockFunction],
                                  "measureInWindow": [MockFunction],
                                  "measureLayout": [MockFunction],
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "refs": Object {},
                                  "setNativeProps": [MockFunction],
                                  "state": null,
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": Object {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": Object {
                                    "pending": null,
                                  },
                                },
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "RCTSafeAreaView",
                              "firstEffect": [Circular],
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 5,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 4,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": [Function],
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 4,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": Object {},
                                  "_reactInternals": [Circular],
                                  "blur": [MockFunction],
                                  "context": Object {},
                                  "focus": [MockFunction],
                                  "measure": [MockFunction],
                                  "measureInWindow": [MockFunction],
                                  "measureLayout": [MockFunction],
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "refs": Object {},
                                  "setNativeProps": [MockFunction],
                                  "state": null,
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": Object {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": Object {
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "RCTSafeAreaView",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": Object {
                              "children": <TextInput
                                accessibilityHint="input"
                                accessibilityLabel="answer input"
                                allowFontScaling={true}
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                onBlur={[Function]}
                                onChangeText={[Function]}
                                onFocus={[Function]}
                                onSubmitEditing={[Function]}
                                placeholder="First name"
                                placeholderTextColor="grey"
                                refName="lastName"
                                rejectResponderTermination={true}
                                returnKeyType="done"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                style={
                                  Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  }
                                }
                                underlineColorAndroid="transparent"
                                value="firstName"
                              />,
                              "emulateUnlessSupported": true,
                              "style": Object {
                                "margin": 10,
                                "marginTop": 5,
                                "padding": 10,
                                "paddingTop": 30,
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "RCTSafeAreaView",
                          },
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "context": Object {},
                      "current": [Circular],
                      "entangledLanes": 0,
                      "entanglements": Array [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": Array [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": Array [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "hydrate": false,
                      "interactionThreadID": 1,
                      "memoizedInteractions": Set {},
                      "mutableReadLanes": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <ForwardRef
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          placeholder="First name"
                          refName="lastName"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          value="firstName"
                        />,
                      },
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 11,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "updateQueue": null,
                },
                "_debugSource": undefined,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 8,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": "TextInput",
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "accessibilityHint": "input",
                    "accessibilityLabel": "answer input",
                    "allowFontScaling": true,
                    "children": undefined,
                    "keyboardType": "default",
                    "moveToNextField": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "name": "firstName",
                    "onBlur": [Function],
                    "onChangeText": [Function],
                    "onFocus": [Function],
                    "onSubmitEditing": [Function],
                    "placeholder": "First name",
                    "placeholderTextColor": "grey",
                    "refName": "lastName",
                    "rejectResponderTermination": true,
                    "returnKeyType": "done",
                    "setValue": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "style": Object {
                      "backgroundColor": "rgba(126,94,129,0.25)",
                      "borderColor": "rgba(126,94,129,0.1)",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "color": "white",
                      "padding": 18,
                    },
                    "underlineColorAndroid": "transparent",
                    "value": "firstName",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "accessibilityHint": "input",
                    "accessibilityLabel": "answer input",
                    "allowFontScaling": true,
                    "children": undefined,
                    "keyboardType": "default",
                    "moveToNextField": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "name": "firstName",
                    "onBlur": [Function],
                    "onChangeText": [Function],
                    "onFocus": [Function],
                    "onSubmitEditing": [Function],
                    "placeholder": "First name",
                    "placeholderTextColor": "grey",
                    "refName": "lastName",
                    "rejectResponderTermination": true,
                    "returnKeyType": "done",
                    "setValue": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "style": Object {
                      "backgroundColor": "rgba(126,94,129,0.25)",
                      "borderColor": "rgba(126,94,129,0.1)",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "color": "white",
                      "padding": 18,
                    },
                    "underlineColorAndroid": "transparent",
                    "value": "firstName",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "children": Array [],
                    "internalInstanceHandle": [Circular],
                    "isHidden": false,
                    "props": Object {
                      "accessibilityHint": "input",
                      "accessibilityLabel": "answer input",
                      "allowFontScaling": true,
                      "children": undefined,
                      "keyboardType": "default",
                      "moveToNextField": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "name": "firstName",
                      "onBlur": [Function],
                      "onChangeText": [Function],
                      "onFocus": [Function],
                      "onSubmitEditing": [Function],
                      "placeholder": "First name",
                      "placeholderTextColor": "grey",
                      "refName": "lastName",
                      "rejectResponderTermination": true,
                      "returnKeyType": "done",
                      "setValue": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "style": Object {
                        "backgroundColor": "rgba(126,94,129,0.25)",
                        "borderColor": "rgba(126,94,129,0.1)",
                        "borderRadius": 8,
                        "borderStyle": "solid",
                        "borderWidth": 1,
                        "color": "white",
                        "padding": 18,
                      },
                      "underlineColorAndroid": "transparent",
                      "value": "firstName",
                    },
                    "rootContainerInstance": Object {
                      "children": Array [
                        Object {
                          "children": Array [
                            [Circular],
                          ],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 6,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 5,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 4,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 11,
                                "treeBaseDuration": 0,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "updateQueue": null,
                              },
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": [Function],
                              "firstEffect": [Circular],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 4,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 11,
                                "treeBaseDuration": 0,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": Object {},
                                "_reactInternals": [Circular],
                                "blur": [MockFunction],
                                "context": Object {},
                                "focus": [MockFunction],
                                "measure": [MockFunction],
                                "measureInWindow": [MockFunction],
                                "measureLayout": [MockFunction],
                                "props": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "refs": Object {},
                                "setNativeProps": [MockFunction],
                                "state": null,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": Object {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "RCTSafeAreaView",
                            "firstEffect": [Circular],
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <TextInput
                                accessibilityHint="input"
                                accessibilityLabel="answer input"
                                allowFontScaling={true}
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                onBlur={[Function]}
                                onChangeText={[Function]}
                                onFocus={[Function]}
                                onSubmitEditing={[Function]}
                                placeholder="First name"
                                placeholderTextColor="grey"
                                refName="lastName"
                                rejectResponderTermination={true}
                                returnKeyType="done"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                style={
                                  Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  }
                                }
                                underlineColorAndroid="transparent"
                                value="firstName"
                              />,
                              "emulateUnlessSupported": true,
                              "style": Object {
                                "margin": 10,
                                "marginTop": 5,
                                "padding": 10,
                                "paddingTop": 30,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <TextInput
                                accessibilityHint="input"
                                accessibilityLabel="answer input"
                                allowFontScaling={true}
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                onBlur={[Function]}
                                onChangeText={[Function]}
                                onFocus={[Function]}
                                onSubmitEditing={[Function]}
                                placeholder="First name"
                                placeholderTextColor="grey"
                                refName="lastName"
                                rejectResponderTermination={true}
                                returnKeyType="done"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                style={
                                  Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  }
                                }
                                underlineColorAndroid="transparent"
                                value="firstName"
                              />,
                              "emulateUnlessSupported": true,
                              "style": Object {
                                "margin": 10,
                                "marginTop": 5,
                                "padding": 10,
                                "paddingTop": 30,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 5,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 4,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 11,
                                "treeBaseDuration": 0,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "updateQueue": null,
                              },
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": [Function],
                              "firstEffect": [Circular],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 4,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 11,
                                "treeBaseDuration": 0,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": Object {},
                                "_reactInternals": [Circular],
                                "blur": [MockFunction],
                                "context": Object {},
                                "focus": [MockFunction],
                                "measure": [MockFunction],
                                "measureInWindow": [MockFunction],
                                "measureLayout": [MockFunction],
                                "props": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "refs": Object {},
                                "setNativeProps": [MockFunction],
                                "state": null,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": Object {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "RCTSafeAreaView",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": Object {
                            "children": <TextInput
                              accessibilityHint="input"
                              accessibilityLabel="answer input"
                              allowFontScaling={true}
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              onBlur={[Function]}
                              onChangeText={[Function]}
                              onFocus={[Function]}
                              onSubmitEditing={[Function]}
                              placeholder="First name"
                              placeholderTextColor="grey"
                              refName="lastName"
                              rejectResponderTermination={true}
                              returnKeyType="done"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              style={
                                Object {
                                  "backgroundColor": "rgba(126,94,129,0.25)",
                                  "borderColor": "rgba(126,94,129,0.1)",
                                  "borderRadius": 8,
                                  "borderStyle": "solid",
                                  "borderWidth": 1,
                                  "color": "white",
                                  "padding": 18,
                                }
                              }
                              underlineColorAndroid="transparent"
                              value="firstName"
                            />,
                            "emulateUnlessSupported": true,
                            "style": Object {
                              "margin": 10,
                              "marginTop": 5,
                              "padding": 10,
                              "paddingTop": 30,
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "RCTSafeAreaView",
                        },
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "TextInput",
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "TextInput",
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": [Function],
                "firstEffect": null,
                "flags": 129,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "accessibilityHint": "input",
                  "accessibilityLabel": "answer input",
                  "allowFontScaling": true,
                  "keyboardType": "default",
                  "moveToNextField": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "name": "firstName",
                  "onBlur": [Function],
                  "onChangeText": [Function],
                  "onFocus": [Function],
                  "onSubmitEditing": [Function],
                  "placeholder": "First name",
                  "placeholderTextColor": "grey",
                  "refName": "lastName",
                  "rejectResponderTermination": true,
                  "returnKeyType": "done",
                  "setValue": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "style": Object {
                    "backgroundColor": "rgba(126,94,129,0.25)",
                    "borderColor": "rgba(126,94,129,0.1)",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "white",
                    "padding": 18,
                  },
                  "underlineColorAndroid": "transparent",
                  "value": "firstName",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "accessibilityHint": "input",
                  "accessibilityLabel": "answer input",
                  "allowFontScaling": true,
                  "keyboardType": "default",
                  "moveToNextField": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "name": "firstName",
                  "onBlur": [Function],
                  "onChangeText": [Function],
                  "onFocus": [Function],
                  "onSubmitEditing": [Function],
                  "placeholder": "First name",
                  "placeholderTextColor": "grey",
                  "refName": "lastName",
                  "rejectResponderTermination": true,
                  "returnKeyType": "done",
                  "setValue": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "style": Object {
                    "backgroundColor": "rgba(126,94,129,0.25)",
                    "borderColor": "rgba(126,94,129,0.1)",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "white",
                    "padding": 18,
                  },
                  "underlineColorAndroid": "transparent",
                  "value": "firstName",
                },
                "ref": [MockFunction] {
                  "calls": [Circular],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 6,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 5,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 4,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 11,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": [Function],
                    "firstEffect": [Circular],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 4,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 11,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": Object {},
                      "_reactInternals": [Circular],
                      "blur": [MockFunction],
                      "context": Object {},
                      "focus": [MockFunction],
                      "measure": [MockFunction],
                      "measureInWindow": [MockFunction],
                      "measureLayout": [MockFunction],
                      "props": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "emulateUnlessSupported": true,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "refs": Object {},
                      "setNativeProps": [MockFunction],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": "RCTSafeAreaView",
                  "firstEffect": [Circular],
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <TextInput
                      accessibilityHint="input"
                      accessibilityLabel="answer input"
                      allowFontScaling={true}
                      keyboardType="default"
                      moveToNextField={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      name="firstName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      onSubmitEditing={[Function]}
                      placeholder="First name"
                      placeholderTextColor="grey"
                      refName="lastName"
                      rejectResponderTermination={true}
                      returnKeyType="done"
                      setValue={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      style={
                        Object {
                          "backgroundColor": "rgba(126,94,129,0.25)",
                          "borderColor": "rgba(126,94,129,0.1)",
                          "borderRadius": 8,
                          "borderStyle": "solid",
                          "borderWidth": 1,
                          "color": "white",
                          "padding": 18,
                        }
                      }
                      underlineColorAndroid="transparent"
                      value="firstName"
                    />,
                    "emulateUnlessSupported": true,
                    "style": Object {
                      "margin": 10,
                      "marginTop": 5,
                      "padding": 10,
                      "paddingTop": 30,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <TextInput
                      accessibilityHint="input"
                      accessibilityLabel="answer input"
                      allowFontScaling={true}
                      keyboardType="default"
                      moveToNextField={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      name="firstName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      onSubmitEditing={[Function]}
                      placeholder="First name"
                      placeholderTextColor="grey"
                      refName="lastName"
                      rejectResponderTermination={true}
                      returnKeyType="done"
                      setValue={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      style={
                        Object {
                          "backgroundColor": "rgba(126,94,129,0.25)",
                          "borderColor": "rgba(126,94,129,0.1)",
                          "borderRadius": 8,
                          "borderStyle": "solid",
                          "borderWidth": 1,
                          "color": "white",
                          "padding": 18,
                        }
                      }
                      underlineColorAndroid="transparent"
                      value="firstName"
                    />,
                    "emulateUnlessSupported": true,
                    "style": Object {
                      "margin": 10,
                      "marginTop": 5,
                      "padding": 10,
                      "paddingTop": 30,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 5,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 4,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 11,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": [Function],
                    "firstEffect": [Circular],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 4,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 11,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": Object {},
                      "_reactInternals": [Circular],
                      "blur": [MockFunction],
                      "context": Object {},
                      "focus": [MockFunction],
                      "measure": [MockFunction],
                      "measureInWindow": [MockFunction],
                      "measureLayout": [MockFunction],
                      "props": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "emulateUnlessSupported": true,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "refs": Object {},
                      "setNativeProps": [MockFunction],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 8,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "TextInput",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "accessibilityHint": "input",
                            "accessibilityLabel": "answer input",
                            "allowFontScaling": true,
                            "children": undefined,
                            "keyboardType": "default",
                            "moveToNextField": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "name": "firstName",
                            "onBlur": [Function],
                            "onChangeText": [Function],
                            "onFocus": [Function],
                            "onSubmitEditing": [Function],
                            "placeholder": "First name",
                            "placeholderTextColor": "grey",
                            "refName": "lastName",
                            "rejectResponderTermination": true,
                            "returnKeyType": "done",
                            "setValue": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "style": Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            },
                            "underlineColorAndroid": "transparent",
                            "value": "firstName",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "accessibilityHint": "input",
                            "accessibilityLabel": "answer input",
                            "allowFontScaling": true,
                            "children": undefined,
                            "keyboardType": "default",
                            "moveToNextField": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "name": "firstName",
                            "onBlur": [Function],
                            "onChangeText": [Function],
                            "onFocus": [Function],
                            "onSubmitEditing": [Function],
                            "placeholder": "First name",
                            "placeholderTextColor": "grey",
                            "refName": "lastName",
                            "rejectResponderTermination": true,
                            "returnKeyType": "done",
                            "setValue": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "style": Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            },
                            "underlineColorAndroid": "transparent",
                            "value": "firstName",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "TextInput",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": Object {
                          "accessibilityHint": "input",
                          "accessibilityLabel": "answer input",
                          "allowFontScaling": true,
                          "children": undefined,
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "onBlur": [Function],
                          "onChangeText": [Function],
                          "onFocus": [Function],
                          "onSubmitEditing": [Function],
                          "placeholder": "First name",
                          "placeholderTextColor": "grey",
                          "refName": "lastName",
                          "rejectResponderTermination": true,
                          "returnKeyType": "done",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "style": Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          },
                          "underlineColorAndroid": "transparent",
                          "value": "firstName",
                        },
                        "rootContainerInstance": Object {
                          "children": Array [
                            [Circular],
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "tag": "INSTANCE",
                        "type": "TextInput",
                      },
                    ],
                    "internalInstanceHandle": [Circular],
                    "isHidden": false,
                    "props": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "rootContainerInstance": Object {
                      "children": Array [
                        [Circular],
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "RCTSafeAreaView",
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "RCTSafeAreaView",
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": [Circular],
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": null,
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "context": Object {},
              "props": Object {
                "accessibilityHint": "input",
                "accessibilityLabel": "answer input",
                "allowFontScaling": true,
                "keyboardType": "default",
                "moveToNextField": [MockFunction] {
                  "calls": [Circular],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "name": "firstName",
                "onBlur": [Function],
                "onChangeText": [Function],
                "onFocus": [Function],
                "onSubmitEditing": [Function],
                "placeholder": "First name",
                "placeholderTextColor": "grey",
                "refName": "lastName",
                "rejectResponderTermination": true,
                "returnKeyType": "done",
                "setValue": [MockFunction] {
                  "calls": [Circular],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "style": Object {
                  "backgroundColor": "rgba(126,94,129,0.25)",
                  "borderColor": "rgba(126,94,129,0.1)",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "color": "white",
                  "padding": 18,
                },
                "underlineColorAndroid": "transparent",
                "value": "firstName",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
          ],
          Array [
            "firstName",
            "Lape",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    name="firstName"
    onBlur={[Function]}
    onChangeText={[Function]}
    onFocus={[Function]}
    onSubmitEditing={[Function]}
    placeholder="First name"
    placeholderTextColor="grey"
    refName="lastName"
    rejectResponderTermination={true}
    returnKeyType="done"
    setValue={
      [MockFunction] {
        "calls": Array [
          Array [
            Component {
              "_reactInternalInstance": Object {},
              "_reactInternals": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 7,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": Array [
                    "useState",
                  ],
                  "_debugID": 3,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": undefined,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 4,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 5,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 6,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": "RCTSafeAreaView",
                        "firstEffect": [Circular],
                        "flags": 0,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <TextInput
                            accessibilityHint="input"
                            accessibilityLabel="answer input"
                            allowFontScaling={true}
                            keyboardType="default"
                            moveToNextField={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            name="firstName"
                            onBlur={[Function]}
                            onChangeText={[Function]}
                            onFocus={[Function]}
                            onSubmitEditing={[Function]}
                            placeholder="First name"
                            placeholderTextColor="grey"
                            refName="lastName"
                            rejectResponderTermination={true}
                            returnKeyType="done"
                            setValue={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            style={
                              Object {
                                "backgroundColor": "rgba(126,94,129,0.25)",
                                "borderColor": "rgba(126,94,129,0.1)",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "color": "white",
                                "padding": 18,
                              }
                            }
                            underlineColorAndroid="transparent"
                            value="firstName"
                          />,
                          "emulateUnlessSupported": true,
                          "style": Object {
                            "margin": 10,
                            "marginTop": 5,
                            "padding": 10,
                            "paddingTop": 30,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <TextInput
                            accessibilityHint="input"
                            accessibilityLabel="answer input"
                            allowFontScaling={true}
                            keyboardType="default"
                            moveToNextField={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            name="firstName"
                            onBlur={[Function]}
                            onChangeText={[Function]}
                            onFocus={[Function]}
                            onSubmitEditing={[Function]}
                            placeholder="First name"
                            placeholderTextColor="grey"
                            refName="lastName"
                            rejectResponderTermination={true}
                            returnKeyType="done"
                            setValue={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            style={
                              Object {
                                "backgroundColor": "rgba(126,94,129,0.25)",
                                "borderColor": "rgba(126,94,129,0.1)",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "color": "white",
                                "padding": 18,
                              }
                            }
                            underlineColorAndroid="transparent"
                            value="firstName"
                          />,
                          "emulateUnlessSupported": true,
                          "style": Object {
                            "margin": 10,
                            "marginTop": 5,
                            "padding": 10,
                            "paddingTop": 30,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": Object {
                          "children": Array [
                            Object {
                              "children": Array [],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 8,
                                "_debugNeedsRemount": false,
                                "_debugOwner": [Circular],
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "TextInput",
                                "firstEffect": null,
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "accessibilityHint": "input",
                                  "accessibilityLabel": "answer input",
                                  "allowFontScaling": true,
                                  "children": undefined,
                                  "keyboardType": "default",
                                  "moveToNextField": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "name": "firstName",
                                  "onBlur": [Function],
                                  "onChangeText": [Function],
                                  "onFocus": [Function],
                                  "onSubmitEditing": [Function],
                                  "placeholder": "First name",
                                  "placeholderTextColor": "grey",
                                  "refName": "lastName",
                                  "rejectResponderTermination": true,
                                  "returnKeyType": "done",
                                  "setValue": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "style": Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  },
                                  "underlineColorAndroid": "transparent",
                                  "value": "firstName",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "accessibilityHint": "input",
                                  "accessibilityLabel": "answer input",
                                  "allowFontScaling": true,
                                  "children": undefined,
                                  "keyboardType": "default",
                                  "moveToNextField": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "name": "firstName",
                                  "onBlur": [Function],
                                  "onChangeText": [Function],
                                  "onFocus": [Function],
                                  "onSubmitEditing": [Function],
                                  "placeholder": "First name",
                                  "placeholderTextColor": "grey",
                                  "refName": "lastName",
                                  "rejectResponderTermination": true,
                                  "returnKeyType": "done",
                                  "setValue": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "style": Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  },
                                  "underlineColorAndroid": "transparent",
                                  "value": "firstName",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "TextInput",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": Object {
                                "accessibilityHint": "input",
                                "accessibilityLabel": "answer input",
                                "allowFontScaling": true,
                                "children": undefined,
                                "keyboardType": "default",
                                "moveToNextField": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "name": "firstName",
                                "onBlur": [Function],
                                "onChangeText": [Function],
                                "onFocus": [Function],
                                "onSubmitEditing": [Function],
                                "placeholder": "First name",
                                "placeholderTextColor": "grey",
                                "refName": "lastName",
                                "rejectResponderTermination": true,
                                "returnKeyType": "done",
                                "setValue": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "style": Object {
                                  "backgroundColor": "rgba(126,94,129,0.25)",
                                  "borderColor": "rgba(126,94,129,0.1)",
                                  "borderRadius": 8,
                                  "borderStyle": "solid",
                                  "borderWidth": 1,
                                  "color": "white",
                                  "padding": 18,
                                },
                                "underlineColorAndroid": "transparent",
                                "value": "firstName",
                              },
                              "rootContainerInstance": Object {
                                "children": Array [
                                  [Circular],
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "tag": "INSTANCE",
                              "type": "TextInput",
                            },
                          ],
                          "internalInstanceHandle": [Circular],
                          "isHidden": false,
                          "props": Object {
                            "children": <TextInput
                              accessibilityHint="input"
                              accessibilityLabel="answer input"
                              allowFontScaling={true}
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              onBlur={[Function]}
                              onChangeText={[Function]}
                              onFocus={[Function]}
                              onSubmitEditing={[Function]}
                              placeholder="First name"
                              placeholderTextColor="grey"
                              refName="lastName"
                              rejectResponderTermination={true}
                              returnKeyType="done"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              style={
                                Object {
                                  "backgroundColor": "rgba(126,94,129,0.25)",
                                  "borderColor": "rgba(126,94,129,0.1)",
                                  "borderRadius": 8,
                                  "borderStyle": "solid",
                                  "borderWidth": 1,
                                  "color": "white",
                                  "padding": 18,
                                }
                              }
                              underlineColorAndroid="transparent"
                              value="firstName"
                            />,
                            "emulateUnlessSupported": true,
                            "style": Object {
                              "margin": 10,
                              "marginTop": 5,
                              "padding": 10,
                              "paddingTop": 30,
                            },
                          },
                          "rootContainerInstance": Object {
                            "children": Array [
                              [Circular],
                            ],
                            "createNodeMock": [Function],
                            "tag": "CONTAINER",
                          },
                          "tag": "INSTANCE",
                          "type": "RCTSafeAreaView",
                        },
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "RCTSafeAreaView",
                        "updateQueue": null,
                      },
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": [Function],
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "emulateUnlessSupported": true,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "emulateUnlessSupported": true,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": Component {
                        "_reactInternalInstance": Object {},
                        "_reactInternals": [Circular],
                        "blur": [MockFunction],
                        "context": Object {},
                        "focus": [MockFunction],
                        "measure": [MockFunction],
                        "measureInWindow": [MockFunction],
                        "measureLayout": [MockFunction],
                        "props": Object {
                          "children": <TextInput
                            accessibilityHint="input"
                            accessibilityLabel="answer input"
                            allowFontScaling={true}
                            keyboardType="default"
                            moveToNextField={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            name="firstName"
                            onBlur={[Function]}
                            onChangeText={[Function]}
                            onFocus={[Function]}
                            onSubmitEditing={[Function]}
                            placeholder="First name"
                            placeholderTextColor="grey"
                            refName="lastName"
                            rejectResponderTermination={true}
                            returnKeyType="done"
                            setValue={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            style={
                              Object {
                                "backgroundColor": "rgba(126,94,129,0.25)",
                                "borderColor": "rgba(126,94,129,0.1)",
                                "borderRadius": 8,
                                "borderStyle": "solid",
                                "borderWidth": 1,
                                "color": "white",
                                "padding": 18,
                              }
                            }
                            underlineColorAndroid="transparent"
                            value="firstName"
                          />,
                          "emulateUnlessSupported": true,
                          "style": Object {
                            "margin": 10,
                            "marginTop": 5,
                            "padding": 10,
                            "paddingTop": 30,
                          },
                        },
                        "refs": Object {},
                        "setNativeProps": [MockFunction],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseState": null,
                        "effects": null,
                        "firstBaseUpdate": null,
                        "lastBaseUpdate": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "firstEffect": [Circular],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 11,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "updateQueue": null,
                  },
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "firstEffect": [Circular],
                  "flags": 1,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "keyboardType": "default",
                    "moveToNextField": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "name": "firstName",
                    "placeholder": "First name",
                    "refName": "lastName",
                    "setValue": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "value": "firstName",
                  },
                  "memoizedState": Object {
                    "baseQueue": null,
                    "baseState": false,
                    "memoizedState": false,
                    "next": null,
                    "queue": Object {
                      "dispatch": [Function],
                      "lastRenderedReducer": [Function],
                      "lastRenderedState": false,
                      "pending": null,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "keyboardType": "default",
                    "moveToNextField": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "name": "firstName",
                    "placeholder": "First name",
                    "refName": "lastName",
                    "setValue": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "value": "firstName",
                  },
                  "ref": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 1,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 1,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": null,
                      "firstEffect": null,
                      "flags": 0,
                      "index": 0,
                      "key": null,
                      "lanes": 1,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "_debugRootType": "createLegacyRoot()",
                        "callbackNode": null,
                        "callbackPriority": 15,
                        "containerInfo": Object {
                          "children": Array [
                            Object {
                              "children": Array [
                                Object {
                                  "children": Array [],
                                  "internalInstanceHandle": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 8,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": "TextInput",
                                    "firstEffect": null,
                                    "flags": 0,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "accessibilityHint": "input",
                                      "accessibilityLabel": "answer input",
                                      "allowFontScaling": true,
                                      "children": undefined,
                                      "keyboardType": "default",
                                      "moveToNextField": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "name": "firstName",
                                      "onBlur": [Function],
                                      "onChangeText": [Function],
                                      "onFocus": [Function],
                                      "onSubmitEditing": [Function],
                                      "placeholder": "First name",
                                      "placeholderTextColor": "grey",
                                      "refName": "lastName",
                                      "rejectResponderTermination": true,
                                      "returnKeyType": "done",
                                      "setValue": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "style": Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      },
                                      "underlineColorAndroid": "transparent",
                                      "value": "firstName",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "accessibilityHint": "input",
                                      "accessibilityLabel": "answer input",
                                      "allowFontScaling": true,
                                      "children": undefined,
                                      "keyboardType": "default",
                                      "moveToNextField": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "name": "firstName",
                                      "onBlur": [Function],
                                      "onChangeText": [Function],
                                      "onFocus": [Function],
                                      "onSubmitEditing": [Function],
                                      "placeholder": "First name",
                                      "placeholderTextColor": "grey",
                                      "refName": "lastName",
                                      "rejectResponderTermination": true,
                                      "returnKeyType": "done",
                                      "setValue": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "style": Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      },
                                      "underlineColorAndroid": "transparent",
                                      "value": "firstName",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": [Circular],
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "TextInput",
                                    "updateQueue": null,
                                  },
                                  "isHidden": false,
                                  "props": Object {
                                    "accessibilityHint": "input",
                                    "accessibilityLabel": "answer input",
                                    "allowFontScaling": true,
                                    "children": undefined,
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "onBlur": [Function],
                                    "onChangeText": [Function],
                                    "onFocus": [Function],
                                    "onSubmitEditing": [Function],
                                    "placeholder": "First name",
                                    "placeholderTextColor": "grey",
                                    "refName": "lastName",
                                    "rejectResponderTermination": true,
                                    "returnKeyType": "done",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "style": Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    },
                                    "underlineColorAndroid": "transparent",
                                    "value": "firstName",
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "TextInput",
                                },
                              ],
                              "internalInstanceHandle": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 6,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 5,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 4,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "firstEffect": [Circular],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 11,
                                    "treeBaseDuration": 0,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "updateQueue": null,
                                  },
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 4,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "firstEffect": [Circular],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 11,
                                    "treeBaseDuration": 0,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "updateQueue": null,
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": Object {},
                                    "_reactInternals": [Circular],
                                    "blur": [MockFunction],
                                    "context": Object {},
                                    "focus": [MockFunction],
                                    "measure": [MockFunction],
                                    "measureInWindow": [MockFunction],
                                    "measureLayout": [MockFunction],
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "refs": Object {},
                                    "setNativeProps": [MockFunction],
                                    "state": null,
                                    "updater": Object {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": Object {
                                      "pending": null,
                                    },
                                  },
                                },
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": "RCTSafeAreaView",
                                "firstEffect": [Circular],
                                "flags": 0,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 5,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 4,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "firstEffect": [Circular],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 11,
                                    "treeBaseDuration": 0,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "updateQueue": null,
                                  },
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": [Function],
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 4,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": undefined,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "firstEffect": [Circular],
                                    "flags": 1,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": null,
                                    "tag": 11,
                                    "treeBaseDuration": 0,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                    "updateQueue": null,
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": Component {
                                    "_reactInternalInstance": Object {},
                                    "_reactInternals": [Circular],
                                    "blur": [MockFunction],
                                    "context": Object {},
                                    "focus": [MockFunction],
                                    "measure": [MockFunction],
                                    "measureInWindow": [MockFunction],
                                    "measureLayout": [MockFunction],
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "refs": Object {},
                                    "setNativeProps": [MockFunction],
                                    "state": null,
                                    "updater": Object {
                                      "enqueueForceUpdate": [Function],
                                      "enqueueReplaceState": [Function],
                                      "enqueueSetState": [Function],
                                      "isMounted": [Function],
                                    },
                                  },
                                  "tag": 1,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "effects": null,
                                    "firstBaseUpdate": null,
                                    "lastBaseUpdate": null,
                                    "shared": Object {
                                      "pending": null,
                                    },
                                  },
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": [Circular],
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "RCTSafeAreaView",
                                "updateQueue": null,
                              },
                              "isHidden": false,
                              "props": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "rootContainerInstance": [Circular],
                              "tag": "INSTANCE",
                              "type": "RCTSafeAreaView",
                            },
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "context": Object {},
                        "current": [Circular],
                        "entangledLanes": 0,
                        "entanglements": Array [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "eventTimes": Array [
                          -1,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "expirationTimes": Array [
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                          -1,
                        ],
                        "expiredLanes": 0,
                        "finishedLanes": 0,
                        "finishedWork": null,
                        "hydrate": false,
                        "interactionThreadID": 1,
                        "memoizedInteractions": Set {},
                        "mutableReadLanes": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pendingLanes": 0,
                        "pingCache": null,
                        "pingedLanes": 0,
                        "suspendedLanes": 0,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "effects": null,
                        "firstBaseUpdate": Object {
                          "callback": null,
                          "eventTime": 2136.425926,
                          "lane": 1,
                          "next": null,
                          "payload": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "tag": 0,
                        },
                        "lastBaseUpdate": Object {
                          "callback": null,
                          "eventTime": 2136.425926,
                          "lane": 1,
                          "next": null,
                          "payload": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "tag": 0,
                        },
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "child": [Circular],
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": null,
                    "firstEffect": [Circular],
                    "flags": 256,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <ForwardRef
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        placeholder="First name"
                        refName="lastName"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        value="firstName"
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "_debugRootType": "createLegacyRoot()",
                      "callbackNode": null,
                      "callbackPriority": 15,
                      "containerInfo": Object {
                        "children": Array [
                          Object {
                            "children": Array [
                              Object {
                                "children": Array [],
                                "internalInstanceHandle": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 8,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": "TextInput",
                                  "firstEffect": null,
                                  "flags": 0,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "accessibilityHint": "input",
                                    "accessibilityLabel": "answer input",
                                    "allowFontScaling": true,
                                    "children": undefined,
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "onBlur": [Function],
                                    "onChangeText": [Function],
                                    "onFocus": [Function],
                                    "onSubmitEditing": [Function],
                                    "placeholder": "First name",
                                    "placeholderTextColor": "grey",
                                    "refName": "lastName",
                                    "rejectResponderTermination": true,
                                    "returnKeyType": "done",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "style": Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    },
                                    "underlineColorAndroid": "transparent",
                                    "value": "firstName",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "accessibilityHint": "input",
                                    "accessibilityLabel": "answer input",
                                    "allowFontScaling": true,
                                    "children": undefined,
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "onBlur": [Function],
                                    "onChangeText": [Function],
                                    "onFocus": [Function],
                                    "onSubmitEditing": [Function],
                                    "placeholder": "First name",
                                    "placeholderTextColor": "grey",
                                    "refName": "lastName",
                                    "rejectResponderTermination": true,
                                    "returnKeyType": "done",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "style": Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    },
                                    "underlineColorAndroid": "transparent",
                                    "value": "firstName",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": [Circular],
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "TextInput",
                                  "updateQueue": null,
                                },
                                "isHidden": false,
                                "props": Object {
                                  "accessibilityHint": "input",
                                  "accessibilityLabel": "answer input",
                                  "allowFontScaling": true,
                                  "children": undefined,
                                  "keyboardType": "default",
                                  "moveToNextField": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "name": "firstName",
                                  "onBlur": [Function],
                                  "onChangeText": [Function],
                                  "onFocus": [Function],
                                  "onSubmitEditing": [Function],
                                  "placeholder": "First name",
                                  "placeholderTextColor": "grey",
                                  "refName": "lastName",
                                  "rejectResponderTermination": true,
                                  "returnKeyType": "done",
                                  "setValue": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "style": Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  },
                                  "underlineColorAndroid": "transparent",
                                  "value": "firstName",
                                },
                                "rootContainerInstance": [Circular],
                                "tag": "INSTANCE",
                                "type": "TextInput",
                              },
                            ],
                            "internalInstanceHandle": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 6,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 5,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 4,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": [Function],
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 4,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": Object {},
                                  "_reactInternals": [Circular],
                                  "blur": [MockFunction],
                                  "context": Object {},
                                  "focus": [MockFunction],
                                  "measure": [MockFunction],
                                  "measureInWindow": [MockFunction],
                                  "measureLayout": [MockFunction],
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "refs": Object {},
                                  "setNativeProps": [MockFunction],
                                  "state": null,
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": Object {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": Object {
                                    "pending": null,
                                  },
                                },
                              },
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": "RCTSafeAreaView",
                              "firstEffect": [Circular],
                              "flags": 0,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 5,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 4,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": [Function],
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 4,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": Component {
                                  "_reactInternalInstance": Object {},
                                  "_reactInternals": [Circular],
                                  "blur": [MockFunction],
                                  "context": Object {},
                                  "focus": [MockFunction],
                                  "measure": [MockFunction],
                                  "measureInWindow": [MockFunction],
                                  "measureLayout": [MockFunction],
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "refs": Object {},
                                  "setNativeProps": [MockFunction],
                                  "state": null,
                                  "updater": Object {
                                    "enqueueForceUpdate": [Function],
                                    "enqueueReplaceState": [Function],
                                    "enqueueSetState": [Function],
                                    "isMounted": [Function],
                                  },
                                },
                                "tag": 1,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": Object {
                                  "baseState": null,
                                  "effects": null,
                                  "firstBaseUpdate": null,
                                  "lastBaseUpdate": null,
                                  "shared": Object {
                                    "pending": null,
                                  },
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": [Circular],
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "RCTSafeAreaView",
                              "updateQueue": null,
                            },
                            "isHidden": false,
                            "props": Object {
                              "children": <TextInput
                                accessibilityHint="input"
                                accessibilityLabel="answer input"
                                allowFontScaling={true}
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                onBlur={[Function]}
                                onChangeText={[Function]}
                                onFocus={[Function]}
                                onSubmitEditing={[Function]}
                                placeholder="First name"
                                placeholderTextColor="grey"
                                refName="lastName"
                                rejectResponderTermination={true}
                                returnKeyType="done"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                style={
                                  Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  }
                                }
                                underlineColorAndroid="transparent"
                                value="firstName"
                              />,
                              "emulateUnlessSupported": true,
                              "style": Object {
                                "margin": 10,
                                "marginTop": 5,
                                "padding": 10,
                                "paddingTop": 30,
                              },
                            },
                            "rootContainerInstance": [Circular],
                            "tag": "INSTANCE",
                            "type": "RCTSafeAreaView",
                          },
                        ],
                        "createNodeMock": [Function],
                        "tag": "CONTAINER",
                      },
                      "context": Object {},
                      "current": [Circular],
                      "entangledLanes": 0,
                      "entanglements": Array [
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "eventTimes": Array [
                        -1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                      ],
                      "expirationTimes": Array [
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                        -1,
                      ],
                      "expiredLanes": 0,
                      "finishedLanes": 0,
                      "finishedWork": null,
                      "hydrate": false,
                      "interactionThreadID": 1,
                      "memoizedInteractions": Set {},
                      "mutableReadLanes": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pendingLanes": 0,
                      "pingCache": null,
                      "pingedLanes": 0,
                      "suspendedLanes": 0,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <ForwardRef
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          placeholder="First name"
                          refName="lastName"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          value="firstName"
                        />,
                      },
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 11,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "render": [Function],
                  },
                  "updateQueue": null,
                },
                "_debugSource": undefined,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 8,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": "TextInput",
                  "firstEffect": null,
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "accessibilityHint": "input",
                    "accessibilityLabel": "answer input",
                    "allowFontScaling": true,
                    "children": undefined,
                    "keyboardType": "default",
                    "moveToNextField": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "name": "firstName",
                    "onBlur": [Function],
                    "onChangeText": [Function],
                    "onFocus": [Function],
                    "onSubmitEditing": [Function],
                    "placeholder": "First name",
                    "placeholderTextColor": "grey",
                    "refName": "lastName",
                    "rejectResponderTermination": true,
                    "returnKeyType": "done",
                    "setValue": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "style": Object {
                      "backgroundColor": "rgba(126,94,129,0.25)",
                      "borderColor": "rgba(126,94,129,0.1)",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "color": "white",
                      "padding": 18,
                    },
                    "underlineColorAndroid": "transparent",
                    "value": "firstName",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "accessibilityHint": "input",
                    "accessibilityLabel": "answer input",
                    "allowFontScaling": true,
                    "children": undefined,
                    "keyboardType": "default",
                    "moveToNextField": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "name": "firstName",
                    "onBlur": [Function],
                    "onChangeText": [Function],
                    "onFocus": [Function],
                    "onSubmitEditing": [Function],
                    "placeholder": "First name",
                    "placeholderTextColor": "grey",
                    "refName": "lastName",
                    "rejectResponderTermination": true,
                    "returnKeyType": "done",
                    "setValue": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "style": Object {
                      "backgroundColor": "rgba(126,94,129,0.25)",
                      "borderColor": "rgba(126,94,129,0.1)",
                      "borderRadius": 8,
                      "borderStyle": "solid",
                      "borderWidth": 1,
                      "color": "white",
                      "padding": 18,
                    },
                    "underlineColorAndroid": "transparent",
                    "value": "firstName",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "children": Array [],
                    "internalInstanceHandle": [Circular],
                    "isHidden": false,
                    "props": Object {
                      "accessibilityHint": "input",
                      "accessibilityLabel": "answer input",
                      "allowFontScaling": true,
                      "children": undefined,
                      "keyboardType": "default",
                      "moveToNextField": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "name": "firstName",
                      "onBlur": [Function],
                      "onChangeText": [Function],
                      "onFocus": [Function],
                      "onSubmitEditing": [Function],
                      "placeholder": "First name",
                      "placeholderTextColor": "grey",
                      "refName": "lastName",
                      "rejectResponderTermination": true,
                      "returnKeyType": "done",
                      "setValue": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "style": Object {
                        "backgroundColor": "rgba(126,94,129,0.25)",
                        "borderColor": "rgba(126,94,129,0.1)",
                        "borderRadius": 8,
                        "borderStyle": "solid",
                        "borderWidth": 1,
                        "color": "white",
                        "padding": 18,
                      },
                      "underlineColorAndroid": "transparent",
                      "value": "firstName",
                    },
                    "rootContainerInstance": Object {
                      "children": Array [
                        Object {
                          "children": Array [
                            [Circular],
                          ],
                          "internalInstanceHandle": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 6,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 5,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 4,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 11,
                                "treeBaseDuration": 0,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "updateQueue": null,
                              },
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": [Function],
                              "firstEffect": [Circular],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 4,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 11,
                                "treeBaseDuration": 0,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": Object {},
                                "_reactInternals": [Circular],
                                "blur": [MockFunction],
                                "context": Object {},
                                "focus": [MockFunction],
                                "measure": [MockFunction],
                                "measureInWindow": [MockFunction],
                                "measureLayout": [MockFunction],
                                "props": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "refs": Object {},
                                "setNativeProps": [MockFunction],
                                "state": null,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": Object {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": "RCTSafeAreaView",
                            "firstEffect": [Circular],
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 0,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <TextInput
                                accessibilityHint="input"
                                accessibilityLabel="answer input"
                                allowFontScaling={true}
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                onBlur={[Function]}
                                onChangeText={[Function]}
                                onFocus={[Function]}
                                onSubmitEditing={[Function]}
                                placeholder="First name"
                                placeholderTextColor="grey"
                                refName="lastName"
                                rejectResponderTermination={true}
                                returnKeyType="done"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                style={
                                  Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  }
                                }
                                underlineColorAndroid="transparent"
                                value="firstName"
                              />,
                              "emulateUnlessSupported": true,
                              "style": Object {
                                "margin": 10,
                                "marginTop": 5,
                                "padding": 10,
                                "paddingTop": 30,
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <TextInput
                                accessibilityHint="input"
                                accessibilityLabel="answer input"
                                allowFontScaling={true}
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                onBlur={[Function]}
                                onChangeText={[Function]}
                                onFocus={[Function]}
                                onSubmitEditing={[Function]}
                                placeholder="First name"
                                placeholderTextColor="grey"
                                refName="lastName"
                                rejectResponderTermination={true}
                                returnKeyType="done"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                style={
                                  Object {
                                    "backgroundColor": "rgba(126,94,129,0.25)",
                                    "borderColor": "rgba(126,94,129,0.1)",
                                    "borderRadius": 8,
                                    "borderStyle": "solid",
                                    "borderWidth": 1,
                                    "color": "white",
                                    "padding": 18,
                                  }
                                }
                                underlineColorAndroid="transparent"
                                value="firstName"
                              />,
                              "emulateUnlessSupported": true,
                              "style": Object {
                                "margin": 10,
                                "marginTop": 5,
                                "padding": 10,
                                "paddingTop": 30,
                              },
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 5,
                              "_debugNeedsRemount": false,
                              "_debugOwner": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 4,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 11,
                                "treeBaseDuration": 0,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "updateQueue": null,
                              },
                              "_debugSource": undefined,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childLanes": 0,
                              "dependencies": null,
                              "elementType": [Function],
                              "firstEffect": [Circular],
                              "flags": 1,
                              "index": 0,
                              "key": null,
                              "lanes": 0,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <TextInput
                                  accessibilityHint="input"
                                  accessibilityLabel="answer input"
                                  allowFontScaling={true}
                                  keyboardType="default"
                                  moveToNextField={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="First name"
                                  placeholderTextColor="grey"
                                  refName="lastName"
                                  rejectResponderTermination={true}
                                  returnKeyType="done"
                                  setValue={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  style={
                                    Object {
                                      "backgroundColor": "rgba(126,94,129,0.25)",
                                      "borderColor": "rgba(126,94,129,0.1)",
                                      "borderRadius": 8,
                                      "borderStyle": "solid",
                                      "borderWidth": 1,
                                      "color": "white",
                                      "padding": 18,
                                    }
                                  }
                                  underlineColorAndroid="transparent"
                                  value="firstName"
                                />,
                                "emulateUnlessSupported": true,
                                "style": Object {
                                  "margin": 10,
                                  "marginTop": 5,
                                  "padding": 10,
                                  "paddingTop": 30,
                                },
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 4,
                                "_debugNeedsRemount": false,
                                "_debugOwner": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "_debugSource": undefined,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": [Circular],
                                "childLanes": 0,
                                "dependencies": null,
                                "elementType": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "firstEffect": [Circular],
                                "flags": 1,
                                "index": 0,
                                "key": null,
                                "lanes": 0,
                                "lastEffect": [Circular],
                                "memoizedProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "ref": null,
                                "return": FiberNode {
                                  "_debugHookTypes": Array [
                                    "useState",
                                  ],
                                  "_debugID": 3,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": undefined,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": [Circular],
                                  "childLanes": 0,
                                  "dependencies": null,
                                  "elementType": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "firstEffect": [Circular],
                                  "flags": 1,
                                  "index": 0,
                                  "key": null,
                                  "lanes": 0,
                                  "lastEffect": [Circular],
                                  "memoizedProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "memoizedState": Object {
                                    "baseQueue": null,
                                    "baseState": false,
                                    "memoizedState": false,
                                    "next": null,
                                    "queue": Object {
                                      "dispatch": [Function],
                                      "lastRenderedReducer": [Function],
                                      "lastRenderedState": false,
                                      "pending": null,
                                    },
                                  },
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyboardType": "default",
                                    "moveToNextField": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "name": "firstName",
                                    "placeholder": "First name",
                                    "refName": "lastName",
                                    "setValue": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "value": "firstName",
                                  },
                                  "ref": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "return": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 1,
                                    "_debugNeedsRemount": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 1,
                                      "_debugNeedsRemount": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": [Circular],
                                      "child": null,
                                      "childLanes": 0,
                                      "dependencies": null,
                                      "elementType": null,
                                      "firstEffect": null,
                                      "flags": 0,
                                      "index": 0,
                                      "key": null,
                                      "lanes": 1,
                                      "lastEffect": null,
                                      "memoizedProps": null,
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": null,
                                      "ref": null,
                                      "return": null,
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": FiberRootNode {
                                        "_debugRootType": "createLegacyRoot()",
                                        "callbackNode": null,
                                        "callbackPriority": 15,
                                        "containerInfo": [Circular],
                                        "context": Object {},
                                        "current": [Circular],
                                        "entangledLanes": 0,
                                        "entanglements": Array [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "eventTimes": Array [
                                          -1,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                        ],
                                        "expirationTimes": Array [
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                          -1,
                                        ],
                                        "expiredLanes": 0,
                                        "finishedLanes": 0,
                                        "finishedWork": null,
                                        "hydrate": false,
                                        "interactionThreadID": 1,
                                        "memoizedInteractions": Set {},
                                        "mutableReadLanes": 0,
                                        "pendingChildren": null,
                                        "pendingContext": null,
                                        "pendingInteractionMap": Map {},
                                        "pendingLanes": 0,
                                        "pingCache": null,
                                        "pingedLanes": 0,
                                        "suspendedLanes": 0,
                                        "tag": 0,
                                        "timeoutHandle": -1,
                                      },
                                      "tag": 3,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": Object {
                                        "baseState": null,
                                        "effects": null,
                                        "firstBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "lastBaseUpdate": Object {
                                          "callback": null,
                                          "eventTime": 2136.425926,
                                          "lane": 1,
                                          "next": null,
                                          "payload": Object {
                                            "element": <ForwardRef
                                              keyboardType="default"
                                              moveToNextField={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              name="firstName"
                                              placeholder="First name"
                                              refName="lastName"
                                              setValue={
                                                [MockFunction] {
                                                  "calls": [Circular],
                                                  "results": Array [
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                    Object {
                                                      "type": "return",
                                                      "value": undefined,
                                                    },
                                                  ],
                                                }
                                              }
                                              value="firstName"
                                            />,
                                          },
                                          "tag": 0,
                                        },
                                        "shared": Object {
                                          "pending": null,
                                        },
                                      },
                                    },
                                    "child": [Circular],
                                    "childLanes": 0,
                                    "dependencies": null,
                                    "elementType": null,
                                    "firstEffect": [Circular],
                                    "flags": 256,
                                    "index": 0,
                                    "key": null,
                                    "lanes": 0,
                                    "lastEffect": [Circular],
                                    "memoizedProps": null,
                                    "memoizedState": Object {
                                      "element": <ForwardRef
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        placeholder="First name"
                                        refName="lastName"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        value="firstName"
                                      />,
                                    },
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": null,
                                    "ref": null,
                                    "return": null,
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": FiberRootNode {
                                      "_debugRootType": "createLegacyRoot()",
                                      "callbackNode": null,
                                      "callbackPriority": 15,
                                      "containerInfo": [Circular],
                                      "context": Object {},
                                      "current": [Circular],
                                      "entangledLanes": 0,
                                      "entanglements": Array [
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "eventTimes": Array [
                                        -1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                        0,
                                      ],
                                      "expirationTimes": Array [
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                        -1,
                                      ],
                                      "expiredLanes": 0,
                                      "finishedLanes": 0,
                                      "finishedWork": null,
                                      "hydrate": false,
                                      "interactionThreadID": 1,
                                      "memoizedInteractions": Set {},
                                      "mutableReadLanes": 0,
                                      "pendingChildren": null,
                                      "pendingContext": null,
                                      "pendingInteractionMap": Map {},
                                      "pendingLanes": 0,
                                      "pingCache": null,
                                      "pingedLanes": 0,
                                      "suspendedLanes": 0,
                                      "tag": 0,
                                      "timeoutHandle": -1,
                                    },
                                    "tag": 3,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": Object {
                                      "baseState": Object {
                                        "element": <ForwardRef
                                          keyboardType="default"
                                          moveToNextField={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          name="firstName"
                                          placeholder="First name"
                                          refName="lastName"
                                          setValue={
                                            [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            }
                                          }
                                          value="firstName"
                                        />,
                                      },
                                      "effects": null,
                                      "firstBaseUpdate": null,
                                      "lastBaseUpdate": null,
                                      "shared": Object {
                                        "pending": null,
                                      },
                                    },
                                  },
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": null,
                                  "tag": 11,
                                  "treeBaseDuration": 0,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                  "updateQueue": null,
                                },
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": null,
                                "tag": 11,
                                "treeBaseDuration": 0,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                                "updateQueue": null,
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": Component {
                                "_reactInternalInstance": Object {},
                                "_reactInternals": [Circular],
                                "blur": [MockFunction],
                                "context": Object {},
                                "focus": [MockFunction],
                                "measure": [MockFunction],
                                "measureInWindow": [MockFunction],
                                "measureLayout": [MockFunction],
                                "props": Object {
                                  "children": <TextInput
                                    accessibilityHint="input"
                                    accessibilityLabel="answer input"
                                    allowFontScaling={true}
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    onBlur={[Function]}
                                    onChangeText={[Function]}
                                    onFocus={[Function]}
                                    onSubmitEditing={[Function]}
                                    placeholder="First name"
                                    placeholderTextColor="grey"
                                    refName="lastName"
                                    rejectResponderTermination={true}
                                    returnKeyType="done"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    style={
                                      Object {
                                        "backgroundColor": "rgba(126,94,129,0.25)",
                                        "borderColor": "rgba(126,94,129,0.1)",
                                        "borderRadius": 8,
                                        "borderStyle": "solid",
                                        "borderWidth": 1,
                                        "color": "white",
                                        "padding": 18,
                                      }
                                    }
                                    underlineColorAndroid="transparent"
                                    value="firstName"
                                  />,
                                  "emulateUnlessSupported": true,
                                  "style": Object {
                                    "margin": 10,
                                    "marginTop": 5,
                                    "padding": 10,
                                    "paddingTop": 30,
                                  },
                                },
                                "refs": Object {},
                                "setNativeProps": [MockFunction],
                                "state": null,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": Object {
                                "baseState": null,
                                "effects": null,
                                "firstBaseUpdate": null,
                                "lastBaseUpdate": null,
                                "shared": Object {
                                  "pending": null,
                                },
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": [Circular],
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "RCTSafeAreaView",
                            "updateQueue": null,
                          },
                          "isHidden": false,
                          "props": Object {
                            "children": <TextInput
                              accessibilityHint="input"
                              accessibilityLabel="answer input"
                              allowFontScaling={true}
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              onBlur={[Function]}
                              onChangeText={[Function]}
                              onFocus={[Function]}
                              onSubmitEditing={[Function]}
                              placeholder="First name"
                              placeholderTextColor="grey"
                              refName="lastName"
                              rejectResponderTermination={true}
                              returnKeyType="done"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              style={
                                Object {
                                  "backgroundColor": "rgba(126,94,129,0.25)",
                                  "borderColor": "rgba(126,94,129,0.1)",
                                  "borderRadius": 8,
                                  "borderStyle": "solid",
                                  "borderWidth": 1,
                                  "color": "white",
                                  "padding": 18,
                                }
                              }
                              underlineColorAndroid="transparent"
                              value="firstName"
                            />,
                            "emulateUnlessSupported": true,
                            "style": Object {
                              "margin": 10,
                              "marginTop": 5,
                              "padding": 10,
                              "paddingTop": 30,
                            },
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "RCTSafeAreaView",
                        },
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "TextInput",
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "TextInput",
                  "updateQueue": null,
                },
                "childLanes": 0,
                "dependencies": null,
                "elementType": [Function],
                "firstEffect": null,
                "flags": 129,
                "index": 0,
                "key": null,
                "lanes": 0,
                "lastEffect": null,
                "memoizedProps": Object {
                  "accessibilityHint": "input",
                  "accessibilityLabel": "answer input",
                  "allowFontScaling": true,
                  "keyboardType": "default",
                  "moveToNextField": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "name": "firstName",
                  "onBlur": [Function],
                  "onChangeText": [Function],
                  "onFocus": [Function],
                  "onSubmitEditing": [Function],
                  "placeholder": "First name",
                  "placeholderTextColor": "grey",
                  "refName": "lastName",
                  "rejectResponderTermination": true,
                  "returnKeyType": "done",
                  "setValue": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "style": Object {
                    "backgroundColor": "rgba(126,94,129,0.25)",
                    "borderColor": "rgba(126,94,129,0.1)",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "white",
                    "padding": 18,
                  },
                  "underlineColorAndroid": "transparent",
                  "value": "firstName",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "accessibilityHint": "input",
                  "accessibilityLabel": "answer input",
                  "allowFontScaling": true,
                  "keyboardType": "default",
                  "moveToNextField": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "name": "firstName",
                  "onBlur": [Function],
                  "onChangeText": [Function],
                  "onFocus": [Function],
                  "onSubmitEditing": [Function],
                  "placeholder": "First name",
                  "placeholderTextColor": "grey",
                  "refName": "lastName",
                  "rejectResponderTermination": true,
                  "returnKeyType": "done",
                  "setValue": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "style": Object {
                    "backgroundColor": "rgba(126,94,129,0.25)",
                    "borderColor": "rgba(126,94,129,0.1)",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "white",
                    "padding": 18,
                  },
                  "underlineColorAndroid": "transparent",
                  "value": "firstName",
                },
                "ref": [MockFunction] {
                  "calls": [Circular],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 6,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 5,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 4,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 11,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": [Function],
                    "firstEffect": [Circular],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 4,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 11,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": Object {},
                      "_reactInternals": [Circular],
                      "blur": [MockFunction],
                      "context": Object {},
                      "focus": [MockFunction],
                      "measure": [MockFunction],
                      "measureInWindow": [MockFunction],
                      "measureLayout": [MockFunction],
                      "props": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "emulateUnlessSupported": true,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "refs": Object {},
                      "setNativeProps": [MockFunction],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childLanes": 0,
                  "dependencies": null,
                  "elementType": "RCTSafeAreaView",
                  "firstEffect": [Circular],
                  "flags": 0,
                  "index": 0,
                  "key": null,
                  "lanes": 0,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <TextInput
                      accessibilityHint="input"
                      accessibilityLabel="answer input"
                      allowFontScaling={true}
                      keyboardType="default"
                      moveToNextField={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      name="firstName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      onSubmitEditing={[Function]}
                      placeholder="First name"
                      placeholderTextColor="grey"
                      refName="lastName"
                      rejectResponderTermination={true}
                      returnKeyType="done"
                      setValue={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      style={
                        Object {
                          "backgroundColor": "rgba(126,94,129,0.25)",
                          "borderColor": "rgba(126,94,129,0.1)",
                          "borderRadius": 8,
                          "borderStyle": "solid",
                          "borderWidth": 1,
                          "color": "white",
                          "padding": 18,
                        }
                      }
                      underlineColorAndroid="transparent"
                      value="firstName"
                    />,
                    "emulateUnlessSupported": true,
                    "style": Object {
                      "margin": 10,
                      "marginTop": 5,
                      "padding": 10,
                      "paddingTop": 30,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <TextInput
                      accessibilityHint="input"
                      accessibilityLabel="answer input"
                      allowFontScaling={true}
                      keyboardType="default"
                      moveToNextField={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      name="firstName"
                      onBlur={[Function]}
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      onSubmitEditing={[Function]}
                      placeholder="First name"
                      placeholderTextColor="grey"
                      refName="lastName"
                      rejectResponderTermination={true}
                      returnKeyType="done"
                      setValue={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      style={
                        Object {
                          "backgroundColor": "rgba(126,94,129,0.25)",
                          "borderColor": "rgba(126,94,129,0.1)",
                          "borderRadius": 8,
                          "borderStyle": "solid",
                          "borderWidth": 1,
                          "color": "white",
                          "padding": 18,
                        }
                      }
                      underlineColorAndroid="transparent"
                      value="firstName"
                    />,
                    "emulateUnlessSupported": true,
                    "style": Object {
                      "margin": 10,
                      "marginTop": 5,
                      "padding": 10,
                      "paddingTop": 30,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 5,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 4,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 11,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "_debugSource": undefined,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childLanes": 0,
                    "dependencies": null,
                    "elementType": [Function],
                    "firstEffect": [Circular],
                    "flags": 1,
                    "index": 0,
                    "key": null,
                    "lanes": 0,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 4,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": undefined,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childLanes": 0,
                      "dependencies": null,
                      "elementType": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "firstEffect": [Circular],
                      "flags": 1,
                      "index": 0,
                      "key": null,
                      "lanes": 0,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": Array [
                          "useState",
                        ],
                        "_debugID": 3,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": undefined,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childLanes": 0,
                        "dependencies": null,
                        "elementType": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "firstEffect": [Circular],
                        "flags": 1,
                        "index": 0,
                        "key": null,
                        "lanes": 0,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "memoizedState": Object {
                          "baseQueue": null,
                          "baseState": false,
                          "memoizedState": false,
                          "next": null,
                          "queue": Object {
                            "dispatch": [Function],
                            "lastRenderedReducer": [Function],
                            "lastRenderedState": false,
                            "pending": null,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "placeholder": "First name",
                          "refName": "lastName",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "value": "firstName",
                        },
                        "ref": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 1,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 1,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": [Circular],
                            "child": null,
                            "childLanes": 0,
                            "dependencies": null,
                            "elementType": null,
                            "firstEffect": null,
                            "flags": 0,
                            "index": 0,
                            "key": null,
                            "lanes": 1,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": FiberRootNode {
                              "_debugRootType": "createLegacyRoot()",
                              "callbackNode": null,
                              "callbackPriority": 15,
                              "containerInfo": Object {
                                "children": Array [
                                  Object {
                                    "children": Array [
                                      Object {
                                        "children": Array [],
                                        "internalInstanceHandle": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 8,
                                          "_debugNeedsRemount": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childLanes": 0,
                                          "dependencies": null,
                                          "elementType": "TextInput",
                                          "firstEffect": null,
                                          "flags": 0,
                                          "index": 0,
                                          "key": null,
                                          "lanes": 0,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "accessibilityHint": "input",
                                            "accessibilityLabel": "answer input",
                                            "allowFontScaling": true,
                                            "children": undefined,
                                            "keyboardType": "default",
                                            "moveToNextField": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "name": "firstName",
                                            "onBlur": [Function],
                                            "onChangeText": [Function],
                                            "onFocus": [Function],
                                            "onSubmitEditing": [Function],
                                            "placeholder": "First name",
                                            "placeholderTextColor": "grey",
                                            "refName": "lastName",
                                            "rejectResponderTermination": true,
                                            "returnKeyType": "done",
                                            "setValue": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "style": Object {
                                              "backgroundColor": "rgba(126,94,129,0.25)",
                                              "borderColor": "rgba(126,94,129,0.1)",
                                              "borderRadius": 8,
                                              "borderStyle": "solid",
                                              "borderWidth": 1,
                                              "color": "white",
                                              "padding": 18,
                                            },
                                            "underlineColorAndroid": "transparent",
                                            "value": "firstName",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": [Circular],
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "TextInput",
                                          "updateQueue": null,
                                        },
                                        "isHidden": false,
                                        "props": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "rootContainerInstance": [Circular],
                                        "tag": "INSTANCE",
                                        "type": "TextInput",
                                      },
                                    ],
                                    "internalInstanceHandle": [Circular],
                                    "isHidden": false,
                                    "props": Object {
                                      "children": <TextInput
                                        accessibilityHint="input"
                                        accessibilityLabel="answer input"
                                        allowFontScaling={true}
                                        keyboardType="default"
                                        moveToNextField={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChangeText={[Function]}
                                        onFocus={[Function]}
                                        onSubmitEditing={[Function]}
                                        placeholder="First name"
                                        placeholderTextColor="grey"
                                        refName="lastName"
                                        rejectResponderTermination={true}
                                        returnKeyType="done"
                                        setValue={
                                          [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          }
                                        }
                                        style={
                                          Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          }
                                        }
                                        underlineColorAndroid="transparent"
                                        value="firstName"
                                      />,
                                      "emulateUnlessSupported": true,
                                      "style": Object {
                                        "margin": 10,
                                        "marginTop": 5,
                                        "padding": 10,
                                        "paddingTop": 30,
                                      },
                                    },
                                    "rootContainerInstance": [Circular],
                                    "tag": "INSTANCE",
                                    "type": "RCTSafeAreaView",
                                  },
                                ],
                                "createNodeMock": [Function],
                                "tag": "CONTAINER",
                              },
                              "context": Object {},
                              "current": [Circular],
                              "entangledLanes": 0,
                              "entanglements": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "eventTimes": Array [
                                -1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "expirationTimes": Array [
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                                -1,
                              ],
                              "expiredLanes": 0,
                              "finishedLanes": 0,
                              "finishedWork": null,
                              "hydrate": false,
                              "interactionThreadID": 1,
                              "memoizedInteractions": Set {},
                              "mutableReadLanes": 0,
                              "pendingChildren": null,
                              "pendingContext": null,
                              "pendingInteractionMap": Map {},
                              "pendingLanes": 0,
                              "pingCache": null,
                              "pingedLanes": 0,
                              "suspendedLanes": 0,
                              "tag": 0,
                              "timeoutHandle": -1,
                            },
                            "tag": 3,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "effects": null,
                              "firstBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "lastBaseUpdate": Object {
                                "callback": null,
                                "eventTime": 2136.425926,
                                "lane": 1,
                                "next": null,
                                "payload": Object {
                                  "element": <ForwardRef
                                    keyboardType="default"
                                    moveToNextField={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    name="firstName"
                                    placeholder="First name"
                                    refName="lastName"
                                    setValue={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    value="firstName"
                                  />,
                                },
                                "tag": 0,
                              },
                              "shared": Object {
                                "pending": null,
                              },
                            },
                          },
                          "child": [Circular],
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": null,
                          "firstEffect": [Circular],
                          "flags": 256,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <ForwardRef
                              keyboardType="default"
                              moveToNextField={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              name="firstName"
                              placeholder="First name"
                              refName="lastName"
                              setValue={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              value="firstName"
                            />,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "_debugRootType": "createLegacyRoot()",
                            "callbackNode": null,
                            "callbackPriority": 15,
                            "containerInfo": Object {
                              "children": Array [
                                Object {
                                  "children": Array [
                                    Object {
                                      "children": Array [],
                                      "internalInstanceHandle": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 8,
                                        "_debugNeedsRemount": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childLanes": 0,
                                        "dependencies": null,
                                        "elementType": "TextInput",
                                        "firstEffect": null,
                                        "flags": 0,
                                        "index": 0,
                                        "key": null,
                                        "lanes": 0,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "accessibilityHint": "input",
                                          "accessibilityLabel": "answer input",
                                          "allowFontScaling": true,
                                          "children": undefined,
                                          "keyboardType": "default",
                                          "moveToNextField": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "name": "firstName",
                                          "onBlur": [Function],
                                          "onChangeText": [Function],
                                          "onFocus": [Function],
                                          "onSubmitEditing": [Function],
                                          "placeholder": "First name",
                                          "placeholderTextColor": "grey",
                                          "refName": "lastName",
                                          "rejectResponderTermination": true,
                                          "returnKeyType": "done",
                                          "setValue": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "style": Object {
                                            "backgroundColor": "rgba(126,94,129,0.25)",
                                            "borderColor": "rgba(126,94,129,0.1)",
                                            "borderRadius": 8,
                                            "borderStyle": "solid",
                                            "borderWidth": 1,
                                            "color": "white",
                                            "padding": 18,
                                          },
                                          "underlineColorAndroid": "transparent",
                                          "value": "firstName",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": [Circular],
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "TextInput",
                                        "updateQueue": null,
                                      },
                                      "isHidden": false,
                                      "props": Object {
                                        "accessibilityHint": "input",
                                        "accessibilityLabel": "answer input",
                                        "allowFontScaling": true,
                                        "children": undefined,
                                        "keyboardType": "default",
                                        "moveToNextField": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "name": "firstName",
                                        "onBlur": [Function],
                                        "onChangeText": [Function],
                                        "onFocus": [Function],
                                        "onSubmitEditing": [Function],
                                        "placeholder": "First name",
                                        "placeholderTextColor": "grey",
                                        "refName": "lastName",
                                        "rejectResponderTermination": true,
                                        "returnKeyType": "done",
                                        "setValue": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "style": Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        },
                                        "underlineColorAndroid": "transparent",
                                        "value": "firstName",
                                      },
                                      "rootContainerInstance": [Circular],
                                      "tag": "INSTANCE",
                                      "type": "TextInput",
                                    },
                                  ],
                                  "internalInstanceHandle": [Circular],
                                  "isHidden": false,
                                  "props": Object {
                                    "children": <TextInput
                                      accessibilityHint="input"
                                      accessibilityLabel="answer input"
                                      allowFontScaling={true}
                                      keyboardType="default"
                                      moveToNextField={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      name="firstName"
                                      onBlur={[Function]}
                                      onChangeText={[Function]}
                                      onFocus={[Function]}
                                      onSubmitEditing={[Function]}
                                      placeholder="First name"
                                      placeholderTextColor="grey"
                                      refName="lastName"
                                      rejectResponderTermination={true}
                                      returnKeyType="done"
                                      setValue={
                                        [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        }
                                      }
                                      style={
                                        Object {
                                          "backgroundColor": "rgba(126,94,129,0.25)",
                                          "borderColor": "rgba(126,94,129,0.1)",
                                          "borderRadius": 8,
                                          "borderStyle": "solid",
                                          "borderWidth": 1,
                                          "color": "white",
                                          "padding": 18,
                                        }
                                      }
                                      underlineColorAndroid="transparent"
                                      value="firstName"
                                    />,
                                    "emulateUnlessSupported": true,
                                    "style": Object {
                                      "margin": 10,
                                      "marginTop": 5,
                                      "padding": 10,
                                      "paddingTop": 30,
                                    },
                                  },
                                  "rootContainerInstance": [Circular],
                                  "tag": "INSTANCE",
                                  "type": "RCTSafeAreaView",
                                },
                              ],
                              "createNodeMock": [Function],
                              "tag": "CONTAINER",
                            },
                            "context": Object {},
                            "current": [Circular],
                            "entangledLanes": 0,
                            "entanglements": Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "eventTimes": Array [
                              -1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ],
                            "expirationTimes": Array [
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                              -1,
                            ],
                            "expiredLanes": 0,
                            "finishedLanes": 0,
                            "finishedWork": null,
                            "hydrate": false,
                            "interactionThreadID": 1,
                            "memoizedInteractions": Set {},
                            "mutableReadLanes": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pendingLanes": 0,
                            "pingCache": null,
                            "pingedLanes": 0,
                            "suspendedLanes": 0,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <ForwardRef
                                keyboardType="default"
                                moveToNextField={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                name="firstName"
                                placeholder="First name"
                                refName="lastName"
                                setValue={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                value="firstName"
                              />,
                            },
                            "effects": null,
                            "firstBaseUpdate": null,
                            "lastBaseUpdate": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 11,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 11,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Component {
                      "_reactInternalInstance": Object {},
                      "_reactInternals": [Circular],
                      "blur": [MockFunction],
                      "context": Object {},
                      "focus": [MockFunction],
                      "measure": [MockFunction],
                      "measureInWindow": [MockFunction],
                      "measureLayout": [MockFunction],
                      "props": Object {
                        "children": <TextInput
                          accessibilityHint="input"
                          accessibilityLabel="answer input"
                          allowFontScaling={true}
                          keyboardType="default"
                          moveToNextField={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          name="firstName"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="First name"
                          placeholderTextColor="grey"
                          refName="lastName"
                          rejectResponderTermination={true}
                          returnKeyType="done"
                          setValue={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          style={
                            Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            }
                          }
                          underlineColorAndroid="transparent"
                          value="firstName"
                        />,
                        "emulateUnlessSupported": true,
                        "style": Object {
                          "margin": 10,
                          "marginTop": 5,
                          "padding": 10,
                          "paddingTop": 30,
                        },
                      },
                      "refs": Object {},
                      "setNativeProps": [MockFunction],
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseState": null,
                      "effects": null,
                      "firstBaseUpdate": null,
                      "lastBaseUpdate": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "internalInstanceHandle": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 8,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childLanes": 0,
                          "dependencies": null,
                          "elementType": "TextInput",
                          "firstEffect": null,
                          "flags": 0,
                          "index": 0,
                          "key": null,
                          "lanes": 0,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "accessibilityHint": "input",
                            "accessibilityLabel": "answer input",
                            "allowFontScaling": true,
                            "children": undefined,
                            "keyboardType": "default",
                            "moveToNextField": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "name": "firstName",
                            "onBlur": [Function],
                            "onChangeText": [Function],
                            "onFocus": [Function],
                            "onSubmitEditing": [Function],
                            "placeholder": "First name",
                            "placeholderTextColor": "grey",
                            "refName": "lastName",
                            "rejectResponderTermination": true,
                            "returnKeyType": "done",
                            "setValue": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "style": Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            },
                            "underlineColorAndroid": "transparent",
                            "value": "firstName",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "accessibilityHint": "input",
                            "accessibilityLabel": "answer input",
                            "allowFontScaling": true,
                            "children": undefined,
                            "keyboardType": "default",
                            "moveToNextField": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "name": "firstName",
                            "onBlur": [Function],
                            "onChangeText": [Function],
                            "onFocus": [Function],
                            "onSubmitEditing": [Function],
                            "placeholder": "First name",
                            "placeholderTextColor": "grey",
                            "refName": "lastName",
                            "rejectResponderTermination": true,
                            "returnKeyType": "done",
                            "setValue": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "style": Object {
                              "backgroundColor": "rgba(126,94,129,0.25)",
                              "borderColor": "rgba(126,94,129,0.1)",
                              "borderRadius": 8,
                              "borderStyle": "solid",
                              "borderWidth": 1,
                              "color": "white",
                              "padding": 18,
                            },
                            "underlineColorAndroid": "transparent",
                            "value": "firstName",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": [Circular],
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "TextInput",
                          "updateQueue": null,
                        },
                        "isHidden": false,
                        "props": Object {
                          "accessibilityHint": "input",
                          "accessibilityLabel": "answer input",
                          "allowFontScaling": true,
                          "children": undefined,
                          "keyboardType": "default",
                          "moveToNextField": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "name": "firstName",
                          "onBlur": [Function],
                          "onChangeText": [Function],
                          "onFocus": [Function],
                          "onSubmitEditing": [Function],
                          "placeholder": "First name",
                          "placeholderTextColor": "grey",
                          "refName": "lastName",
                          "rejectResponderTermination": true,
                          "returnKeyType": "done",
                          "setValue": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "style": Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          },
                          "underlineColorAndroid": "transparent",
                          "value": "firstName",
                        },
                        "rootContainerInstance": Object {
                          "children": Array [
                            [Circular],
                          ],
                          "createNodeMock": [Function],
                          "tag": "CONTAINER",
                        },
                        "tag": "INSTANCE",
                        "type": "TextInput",
                      },
                    ],
                    "internalInstanceHandle": [Circular],
                    "isHidden": false,
                    "props": Object {
                      "children": <TextInput
                        accessibilityHint="input"
                        accessibilityLabel="answer input"
                        allowFontScaling={true}
                        keyboardType="default"
                        moveToNextField={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        name="firstName"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="First name"
                        placeholderTextColor="grey"
                        refName="lastName"
                        rejectResponderTermination={true}
                        returnKeyType="done"
                        setValue={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        style={
                          Object {
                            "backgroundColor": "rgba(126,94,129,0.25)",
                            "borderColor": "rgba(126,94,129,0.1)",
                            "borderRadius": 8,
                            "borderStyle": "solid",
                            "borderWidth": 1,
                            "color": "white",
                            "padding": 18,
                          }
                        }
                        underlineColorAndroid="transparent"
                        value="firstName"
                      />,
                      "emulateUnlessSupported": true,
                      "style": Object {
                        "margin": 10,
                        "marginTop": 5,
                        "padding": 10,
                        "paddingTop": 30,
                      },
                    },
                    "rootContainerInstance": Object {
                      "children": Array [
                        [Circular],
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "RCTSafeAreaView",
                  },
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "RCTSafeAreaView",
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": [Circular],
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseState": null,
                  "effects": null,
                  "firstBaseUpdate": null,
                  "lastBaseUpdate": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "context": Object {},
              "props": Object {
                "accessibilityHint": "input",
                "accessibilityLabel": "answer input",
                "allowFontScaling": true,
                "keyboardType": "default",
                "moveToNextField": [MockFunction] {
                  "calls": [Circular],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "name": "firstName",
                "onBlur": [Function],
                "onChangeText": [Function],
                "onFocus": [Function],
                "onSubmitEditing": [Function],
                "placeholder": "First name",
                "placeholderTextColor": "grey",
                "refName": "lastName",
                "rejectResponderTermination": true,
                "returnKeyType": "done",
                "setValue": [MockFunction] {
                  "calls": [Circular],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "style": Object {
                  "backgroundColor": "rgba(126,94,129,0.25)",
                  "borderColor": "rgba(126,94,129,0.1)",
                  "borderRadius": 8,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "color": "white",
                  "padding": 18,
                },
                "underlineColorAndroid": "transparent",
                "value": "firstName",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
          ],
          Array [
            "firstName",
            "Lape",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    style={
      Object {
        "backgroundColor": "rgba(126,94,129,0.25)",
        "borderColor": "rgba(126,94,129,0.1)",
        "borderRadius": 8,
        "borderStyle": "solid",
        "borderWidth": 1,
        "color": "white",
        "padding": 18,
      }
    }
    underlineColorAndroid="transparent"
    value="firstName"
  />
</RCTSafeAreaView>
`;
